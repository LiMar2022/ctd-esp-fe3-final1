{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Documents\\\\TECH\\\\FRONTEND\\\\FRONTEND2\\\\fe3-final\\\\src\\\\Components\\\\Contact.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Contact() {\n  _s();\n\n  const [form, setForm] = useState({\n    name: '',\n    email: ''\n  });\n  const [errors, setErrors] = useState({\n    name: '',\n    email: ''\n  }); // Validar que el nombre no esté vacío\n\n  const validateName = () => {\n    if (form.name.trim() === '') {\n      setErrors(prev => ({ ...prev,\n        name: 'El nombre es obligatorio.'\n      }));\n      return false;\n    } else {\n      setErrors(prev => ({ ...prev,\n        name: ''\n      }));\n      return true;\n    }\n  }; // Validar que el email tenga un formato válido\n\n\n  const validateEmail = () => {\n    const emailPattern = /^[^@]+@[^@]+\\.[a-zA-Z]{2,}$/;\n\n    if (!emailPattern.test(form.email)) {\n      setErrors(prev => ({ ...prev,\n        email: 'Por favor ingrese un email válido.'\n      }));\n      return false;\n    } else {\n      setErrors(prev => ({ ...prev,\n        email: ''\n      }));\n      return true;\n    }\n  }; // Función que maneja los cambios en los inputs\n\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setForm({ ...form,\n      [name]: value\n    });\n  }; // Función que maneja el envío del formulario\n\n\n  const handleSubmit = e => {\n    e.preventDefault(); // Realiza las validaciones\n\n    const isNameValid = validateName();\n    const isEmailValid = validateEmail();\n\n    if (isNameValid && isEmailValid) {\n      alert('Formulario enviado correctamente.');\n    } else {\n      alert('Por favor completa correctamente todos los campos.');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Contacto\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Nombre:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          value: form.name,\n          onChange: handleChange,\n          onBlur: validateName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), errors.name && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: 'red'\n          },\n          children: errors.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          value: form.email,\n          onChange: handleChange,\n          onBlur: validateEmail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), errors.email && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: 'red'\n          },\n          children: errors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Enviar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Contact, \"6NbUGnkBUJ4FscKC+wKDhfFNsQ0=\");\n\n_c = Contact;\nexport default Contact;\n\nvar _c;\n\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"names":["React","useState","Contact","form","setForm","name","email","errors","setErrors","validateName","trim","prev","validateEmail","emailPattern","test","handleChange","e","value","target","handleSubmit","preventDefault","isNameValid","isEmailValid","alert","color"],"sources":["C:/Users/Asus/Documents/TECH/FRONTEND/FRONTEND2/fe3-final/src/Components/Contact.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction Contact() {\r\n  const [form, setForm] = useState({\r\n    name: '',\r\n    email: ''\r\n  });\r\n  \r\n  const [errors, setErrors] = useState({\r\n    name: '',\r\n    email: ''\r\n  });\r\n\r\n  // Validar que el nombre no esté vacío\r\n  const validateName = () => {\r\n    if (form.name.trim() === '') {\r\n      setErrors(prev => ({ ...prev, name: 'El nombre es obligatorio.' }));\r\n      return false;\r\n    } else {\r\n      setErrors(prev => ({ ...prev, name: '' }));\r\n      return true;\r\n    }\r\n  };\r\n\r\n  // Validar que el email tenga un formato válido\r\n  const validateEmail = () => {\r\n    const emailPattern = /^[^@]+@[^@]+\\.[a-zA-Z]{2,}$/;\r\n    if (!emailPattern.test(form.email)) {\r\n      setErrors(prev => ({ ...prev, email: 'Por favor ingrese un email válido.' }));\r\n      return false;\r\n    } else {\r\n      setErrors(prev => ({ ...prev, email: '' }));\r\n      return true;\r\n    }\r\n  };\r\n\r\n  // Función que maneja los cambios en los inputs\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setForm({ ...form, [name]: value });\r\n  };\r\n\r\n  // Función que maneja el envío del formulario\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    // Realiza las validaciones\r\n    const isNameValid = validateName();\r\n    const isEmailValid = validateEmail();\r\n\r\n    if (isNameValid && isEmailValid) {\r\n      alert('Formulario enviado correctamente.');\r\n    } else {\r\n      alert('Por favor completa correctamente todos los campos.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Contacto</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <label>Nombre:</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={form.name}\r\n            onChange={handleChange}\r\n            onBlur={validateName}  \r\n          />\r\n          {errors.name && <p style={{ color: 'red' }}>{errors.name}</p>}\r\n        </div>\r\n        \r\n        <div>\r\n          <label>Email:</label>\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={form.email}\r\n            onChange={handleChange}\r\n            onBlur={validateEmail} \r\n          />\r\n          {errors.email && <p style={{ color: 'red' }}>{errors.email}</p>}\r\n        </div>\r\n        \r\n        <button type=\"submit\">Enviar</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Contact;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}